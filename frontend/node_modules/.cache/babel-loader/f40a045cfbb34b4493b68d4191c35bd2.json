{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/Projects/ITslots/front-end/slot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var [facList, setFacList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/\").then(response => response.json()).then(data => setFacList(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"2\",\n      cellSpacing: \"0\",\n      cellPadding: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Faculty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: facList.map(fac => /*#__PURE__*/_jsxDEV(Faculty, {\n          id: fac._id,\n          name: fac.name,\n          entries: fac.maxEntries\n        }, fac._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: console.log(\"YESS\"),\n      children: \"I am a button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ebe6hq9Qomy1xEBKXd2gFhJWf/E=\");\n\n_c = App;\n\nconst Faculty = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"text\",\n        defaultValue: props.entries,\n        onChange: e => {\n          console.log(e.target.value);\n          const requestOptions = {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              faculty: props.name,\n              maxEntries: e.target.value\n            })\n          };\n          fetch(`http://localhost:8080/`, requestOptions).then(data => console.log(data));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Faculty;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Faculty\");","map":{"version":3,"sources":["/home/hari/Desktop/Projects/ITslots/front-end/slot/src/App.js"],"names":["React","useState","useEffect","App","facList","setFacList","fetch","then","response","json","data","map","fac","_id","name","maxEntries","console","log","Faculty","props","id","entries","e","target","value","requestOptions","method","headers","body","JSON","stringify","faculty"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAoBC,SAApB,QAAoC,OAApC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,MAAI,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,wBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAUL,UAAU,CAACK,IAAD,CAF1B;AAKD,GANQ,EAMP,EANO,CAAT;AAQA,sBACE;AAAA,4BAEA;AAAO,MAAA,MAAM,EAAC,GAAd;AAAkB,MAAA,WAAW,EAAC,GAA9B;AAAkC,MAAA,WAAW,EAAC,GAA9C;AAAA,8BACE;AAAA,+BACE;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGN,OAAO,CAACO,GAAR,CAAaC,GAAD,iBAAS,QAAC,OAAD;AAAuB,UAAA,EAAE,EAAEA,GAAG,CAACC,GAA/B;AAAoC,UAAA,IAAI,EAAED,GAAG,CAACE,IAA9C;AAAoD,UAAA,OAAO,EAAEF,GAAG,CAACG;AAAjE,WAAcH,GAAG,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,gBAArB;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAgBE;AAAQ,MAAA,OAAO,EAAEG,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjCD;;GAAMd,G;;KAAAA,G;;AAmCN,MAAMe,OAAO,GAAIC,KAAD,IAAW;AACzB,sBACE;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACL;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAI;AAAO,QAAA,EAAE,EAAEK,KAAK,CAACC,EAAjB;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAkC,QAAA,YAAY,EAAED,KAAK,CAACE,OAAtD;AAA+D,QAAA,QAAQ,EAAIC,CAAD,IAAM;AAElFN,UAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,KAArB;AACA,gBAAMC,cAAc,GAAG;AACnBC,YAAAA,MAAM,EAAE,KADW;AAEnBC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFU;AAGnBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,OAAO,EAAEZ,KAAK,CAACL,IAAjB;AAAuBC,cAAAA,UAAU,EAAEO,CAAC,CAACC,MAAF,CAASC;AAA5C,aAAf;AAHa,WAAvB;AAKAlB,UAAAA,KAAK,CAAE,wBAAF,EAA2BmB,cAA3B,CAAL,CACKlB,IADL,CACUG,IAAI,IAAIM,OAAO,CAACC,GAAR,CAAYP,IAAZ,CADlB;AAGD;AAXG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;MAAMQ,O;AAwBN,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport { useState , useEffect} from 'react';\n\nconst App = () => {\n\n  var [facList,setFacList] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/\")\n    .then(response => response.json())\n    .then((data) => setFacList(data))\n\n \n  },[])\n\n  return (\n    <div>\n\n    <table border=\"2\" cellSpacing=\"0\" cellPadding=\"6\">\n      <thead>\n        <tr>\n            <th>Faculty</th>\n            <th>Max Entries</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {facList.map((fac) => <Faculty key={fac._id} id={fac._id} name={fac.name} entries={fac.maxEntries} />)}\n\n      </tbody>\n      \n    </table>\n      <button onClick={console.log(\"YESS\")}>I am a button</button>\n\n    </div>\n  )\n}\n\nconst Faculty = (props) => {\n  return (\n    <tr>\n      <th>{props.name}</th>\n      <td><input id={props.id} type=\"text\"  defaultValue={props.entries} onChange= {(e) =>{\n        \n        console.log(e.target.value)\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ faculty: props.name, maxEntries: e.target.value })\n        };\n        fetch(`http://localhost:8080/`, requestOptions)\n            .then(data => console.log(data));\n      \n      } \n      \n      }></input></td>\n    </tr>\n  )\n}\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}