{"ast":null,"code":"/**\n * implements https://w3c.github.io/accname/\n */\nimport ArrayFrom from \"./polyfills/array.from.mjs\";\nimport SetLike from \"./polyfills/SetLike.mjs\";\nimport { hasAnyConcreteRoles, isElement, isHTMLTableCaptionElement, isHTMLInputElement, isHTMLSelectElement, isHTMLTextAreaElement, safeWindow, isHTMLFieldSetElement, isHTMLLegendElement, isHTMLOptGroupElement, isHTMLTableElement, isHTMLSlotElement, isSVGSVGElement, isSVGTitleElement, queryIdRefs, getLocalName } from \"./util.mjs\";\n/**\n *  A string of characters where all carriage returns, newlines, tabs, and form-feeds are replaced with a single space, and multiple spaces are reduced to a single space. The string contains only character data; it does not contain any markup.\n */\n\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\n\nfunction asFlatString(s) {\n  return s.trim().replace(/\\s\\s+/g, \" \");\n}\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\n\n\nfunction isHidden(node, getComputedStyleImplementation) {\n  if (!isElement(node)) {\n    return false;\n  }\n\n  if (node.hasAttribute(\"hidden\") || node.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n\n  var style = getComputedStyleImplementation(node);\n  return style.getPropertyValue(\"display\") === \"none\" || style.getPropertyValue(\"visibility\") === \"hidden\";\n}\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\n\n\nfunction isControl(node) {\n  return hasAnyConcreteRoles(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) || hasAbstractRole(node, \"range\");\n}\n\nfunction hasAbstractRole(node, role) {\n  if (!isElement(node)) {\n    return false;\n  }\n\n  switch (role) {\n    case \"range\":\n      return hasAnyConcreteRoles(node, [\"meter\", \"progressbar\", \"scrollbar\", \"slider\", \"spinbutton\"]);\n\n    default:\n      throw new TypeError(\"No knowledge about abstract role '\".concat(role, \"'. This is likely a bug :(\"));\n  }\n}\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\n\n\nfunction querySelectorAllSubtree(element, selectors) {\n  var elements = ArrayFrom(element.querySelectorAll(selectors));\n  queryIdRefs(element, \"aria-owns\").forEach(function (root) {\n    // babel transpiles this assuming an iterator\n    elements.push.apply(elements, ArrayFrom(root.querySelectorAll(selectors)));\n  });\n  return elements;\n}\n\nfunction querySelectedOptions(listbox) {\n  if (isHTMLSelectElement(listbox)) {\n    // IE11 polyfill\n    return listbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\");\n  }\n\n  return querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\n\nfunction isMarkedPresentational(node) {\n  return hasAnyConcreteRoles(node, [\"none\", \"presentation\"]);\n}\n/**\n * Elements specifically listed in html-aam\n *\n * We don't need this for `label` or `legend` elements.\n * Their implicit roles already allow \"naming from content\".\n *\n * sources:\n *\n * - https://w3c.github.io/html-aam/#table-element\n */\n\n\nfunction isNativeHostLanguageTextAlternativeElement(node) {\n  return isHTMLTableCaptionElement(node);\n}\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\n\n\nfunction allowsNameFromContent(node) {\n  return hasAnyConcreteRoles(node, [\"button\", \"cell\", \"checkbox\", \"columnheader\", \"gridcell\", \"heading\", \"label\", \"legend\", \"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"option\", \"radio\", \"row\", \"rowheader\", \"switch\", \"tab\", \"tooltip\", \"treeitem\"]);\n}\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/100\n */\n\n\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement( // eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\nnode) {\n  return false;\n}\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/101\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\n\n\nfunction computeTooltipAttributeValue(node) {\n  return null;\n}\n\nfunction getValueOfTextbox(element) {\n  if (isHTMLInputElement(element) || isHTMLTextAreaElement(element)) {\n    return element.value;\n  } // https://github.com/eps1lon/dom-accessibility-api/issues/4\n\n\n  return element.textContent || \"\";\n}\n\nfunction getTextualContent(declaration) {\n  var content = declaration.getPropertyValue(\"content\");\n\n  if (/^[\"'].*[\"']$/.test(content)) {\n    return content.slice(1, -1);\n  }\n\n  return \"\";\n}\n/**\n * https://html.spec.whatwg.org/multipage/forms.html#category-label\n * TODO: form-associated custom elements\n * @param element\n */\n\n\nfunction isLabelableElement(element) {\n  var localName = getLocalName(element);\n  return localName === \"button\" || localName === \"input\" && element.getAttribute(\"type\") !== \"hidden\" || localName === \"meter\" || localName === \"output\" || localName === \"progress\" || localName === \"select\" || localName === \"textarea\";\n}\n/**\n * > [...], then the first such descendant in tree order is the label element's labeled control.\n * -- https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param element\n */\n\n\nfunction findLabelableElement(element) {\n  if (isLabelableElement(element)) {\n    return element;\n  }\n\n  var labelableElement = null;\n  element.childNodes.forEach(function (childNode) {\n    if (labelableElement === null && isElement(childNode)) {\n      var descendantLabelableElement = findLabelableElement(childNode);\n\n      if (descendantLabelableElement !== null) {\n        labelableElement = descendantLabelableElement;\n      }\n    }\n  });\n  return labelableElement;\n}\n/**\n * Polyfill of HTMLLabelElement.control\n * https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param label\n */\n\n\nfunction getControlOfLabel(label) {\n  if (label.control !== undefined) {\n    return label.control;\n  }\n\n  var htmlFor = label.getAttribute(\"for\");\n\n  if (htmlFor !== null) {\n    return label.ownerDocument.getElementById(htmlFor);\n  }\n\n  return findLabelableElement(label);\n}\n/**\n * Polyfill of HTMLInputElement.labels\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels\n * @param element\n */\n\n\nfunction getLabels(element) {\n  var labelsProperty = element.labels;\n\n  if (labelsProperty === null) {\n    return labelsProperty;\n  }\n\n  if (labelsProperty !== undefined) {\n    return ArrayFrom(labelsProperty);\n  } // polyfill\n\n\n  if (!isLabelableElement(element)) {\n    return null;\n  }\n\n  var document = element.ownerDocument;\n  return ArrayFrom(document.querySelectorAll(\"label\")).filter(function (label) {\n    return getControlOfLabel(label) === element;\n  });\n}\n/**\n * Gets the contents of a slot used for computing the accname\n * @param slot\n */\n\n\nfunction getSlotContents(slot) {\n  // Computing the accessible name for elements containing slots is not\n  // currently defined in the spec. This implementation reflects the\n  // behavior of NVDA 2020.2/Firefox 81 and iOS VoiceOver/Safari 13.6.\n  var assignedNodes = slot.assignedNodes();\n\n  if (assignedNodes.length === 0) {\n    // if no nodes are assigned to the slot, it displays the default content\n    return ArrayFrom(slot.childNodes);\n  }\n\n  return assignedNodes;\n}\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param options\n * @returns\n */\n\n\nexport function computeTextAlternative(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var consultedNodes = new SetLike();\n  var window = safeWindow(root);\n  var _options$compute = options.compute,\n      compute = _options$compute === void 0 ? \"name\" : _options$compute,\n      _options$computedStyl = options.computedStyleSupportsPseudoElements,\n      computedStyleSupportsPseudoElements = _options$computedStyl === void 0 ? options.getComputedStyle !== undefined : _options$computedStyl,\n      _options$getComputedS = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS === void 0 ? window.getComputedStyle.bind(window) : _options$getComputedS,\n      _options$hidden = options.hidden,\n      hidden = _options$hidden === void 0 ? false : _options$hidden; // 2F.i\n\n  function computeMiscTextAlternative(node, context) {\n    var accumulatedText = \"\";\n\n    if (isElement(node) && computedStyleSupportsPseudoElements) {\n      var pseudoBefore = getComputedStyle(node, \"::before\");\n      var beforeContent = getTextualContent(pseudoBefore);\n      accumulatedText = \"\".concat(beforeContent, \" \").concat(accumulatedText);\n    } // FIXME: Including aria-owns is not defined in the spec\n    // But it is required in the web-platform-test\n\n\n    var childNodes = isHTMLSlotElement(node) ? getSlotContents(node) : ArrayFrom(node.childNodes).concat(queryIdRefs(node, \"aria-owns\"));\n    childNodes.forEach(function (child) {\n      var result = computeTextAlternative(child, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false,\n        recursion: true\n      }); // TODO: Unclear why display affects delimiter\n      // see https://github.com/w3c/accname/issues/3\n\n      var display = isElement(child) ? getComputedStyle(child).getPropertyValue(\"display\") : \"inline\";\n      var separator = display !== \"inline\" ? \" \" : \"\"; // trailing separator for wpt tests\n\n      accumulatedText += \"\".concat(separator).concat(result).concat(separator);\n    });\n\n    if (isElement(node) && computedStyleSupportsPseudoElements) {\n      var pseudoAfter = getComputedStyle(node, \"::after\");\n      var afterContent = getTextualContent(pseudoAfter);\n      accumulatedText = \"\".concat(accumulatedText, \" \").concat(afterContent);\n    }\n\n    return accumulatedText.trim();\n  }\n\n  function computeElementTextAlternative(node) {\n    if (!isElement(node)) {\n      return null;\n    }\n    /**\n     *\n     * @param element\n     * @param attributeName\n     * @returns A string non-empty string or `null`\n     */\n\n\n    function useAttribute(element, attributeName) {\n      var attribute = element.getAttributeNode(attributeName);\n\n      if (attribute !== null && !consultedNodes.has(attribute) && attribute.value.trim() !== \"\") {\n        consultedNodes.add(attribute);\n        return attribute.value;\n      }\n\n      return null;\n    } // https://w3c.github.io/html-aam/#fieldset-and-legend-elements\n\n\n    if (isHTMLFieldSetElement(node)) {\n      consultedNodes.add(node);\n      var children = ArrayFrom(node.childNodes);\n\n      for (var i = 0; i < children.length; i += 1) {\n        var child = children[i];\n\n        if (isHTMLLegendElement(child)) {\n          return computeTextAlternative(child, {\n            isEmbeddedInLabel: false,\n            isReferenced: false,\n            recursion: false\n          });\n        }\n      }\n    } else if (isHTMLTableElement(node)) {\n      // https://w3c.github.io/html-aam/#table-element\n      consultedNodes.add(node);\n\n      var _children = ArrayFrom(node.childNodes);\n\n      for (var _i = 0; _i < _children.length; _i += 1) {\n        var _child = _children[_i];\n\n        if (isHTMLTableCaptionElement(_child)) {\n          return computeTextAlternative(_child, {\n            isEmbeddedInLabel: false,\n            isReferenced: false,\n            recursion: false\n          });\n        }\n      }\n    } else if (isSVGSVGElement(node)) {\n      // https://www.w3.org/TR/svg-aam-1.0/\n      consultedNodes.add(node);\n\n      var _children2 = ArrayFrom(node.childNodes);\n\n      for (var _i2 = 0; _i2 < _children2.length; _i2 += 1) {\n        var _child2 = _children2[_i2];\n\n        if (isSVGTitleElement(_child2)) {\n          return _child2.textContent;\n        }\n      }\n\n      return null;\n    } else if (getLocalName(node) === \"img\" || getLocalName(node) === \"area\") {\n      // https://w3c.github.io/html-aam/#area-element\n      // https://w3c.github.io/html-aam/#img-element\n      var nameFromAlt = useAttribute(node, \"alt\");\n\n      if (nameFromAlt !== null) {\n        return nameFromAlt;\n      }\n    } else if (isHTMLOptGroupElement(node)) {\n      var nameFromLabel = useAttribute(node, \"label\");\n\n      if (nameFromLabel !== null) {\n        return nameFromLabel;\n      }\n    }\n\n    if (isHTMLInputElement(node) && (node.type === \"button\" || node.type === \"submit\" || node.type === \"reset\")) {\n      // https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n      var nameFromValue = useAttribute(node, \"value\");\n\n      if (nameFromValue !== null) {\n        return nameFromValue;\n      } // TODO: l10n\n\n\n      if (node.type === \"submit\") {\n        return \"Submit\";\n      } // TODO: l10n\n\n\n      if (node.type === \"reset\") {\n        return \"Reset\";\n      }\n    }\n\n    var labels = getLabels(node);\n\n    if (labels !== null && labels.length !== 0) {\n      consultedNodes.add(node);\n      return ArrayFrom(labels).map(function (element) {\n        return computeTextAlternative(element, {\n          isEmbeddedInLabel: true,\n          isReferenced: false,\n          recursion: true\n        });\n      }).filter(function (label) {\n        return label.length > 0;\n      }).join(\" \");\n    } // https://w3c.github.io/html-aam/#input-type-image-accessible-name-computation\n    // TODO: wpt test consider label elements but html-aam does not mention them\n    // We follow existing implementations over spec\n\n\n    if (isHTMLInputElement(node) && node.type === \"image\") {\n      var _nameFromAlt = useAttribute(node, \"alt\");\n\n      if (_nameFromAlt !== null) {\n        return _nameFromAlt;\n      }\n\n      var nameFromTitle = useAttribute(node, \"title\");\n\n      if (nameFromTitle !== null) {\n        return nameFromTitle;\n      } // TODO: l10n\n\n\n      return \"Submit Query\";\n    }\n\n    if (hasAnyConcreteRoles(node, [\"button\"])) {\n      // https://www.w3.org/TR/html-aam-1.0/#button-element\n      var nameFromSubTree = computeMiscTextAlternative(node, {\n        isEmbeddedInLabel: false,\n        isReferenced: false\n      });\n\n      if (nameFromSubTree !== \"\") {\n        return nameFromSubTree;\n      }\n\n      return useAttribute(node, \"title\");\n    }\n\n    return useAttribute(node, \"title\");\n  }\n\n  function computeTextAlternative(current, context) {\n    if (consultedNodes.has(current)) {\n      return \"\";\n    } // 2A\n\n\n    if (!hidden && isHidden(current, getComputedStyle) && !context.isReferenced) {\n      consultedNodes.add(current);\n      return \"\";\n    } // 2B\n\n\n    var labelElements = queryIdRefs(current, \"aria-labelledby\");\n\n    if (compute === \"name\" && !context.isReferenced && labelElements.length > 0) {\n      return labelElements.map(function (element) {\n        return computeTextAlternative(element, {\n          isEmbeddedInLabel: context.isEmbeddedInLabel,\n          isReferenced: true,\n          // thais isn't recursion as specified, otherwise we would skip\n          // `aria-label` in\n          // <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n          recursion: false\n        });\n      }).join(\" \");\n    } // 2C\n    // Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n    // spec says we should only consider skipping if we have a non-empty label\n\n\n    var skipToStep2E = context.recursion && isControl(current) && compute === \"name\";\n\n    if (!skipToStep2E) {\n      var ariaLabel = (isElement(current) && current.getAttribute(\"aria-label\") || \"\").trim();\n\n      if (ariaLabel !== \"\" && compute === \"name\") {\n        consultedNodes.add(current);\n        return ariaLabel;\n      } // 2D\n\n\n      if (!isMarkedPresentational(current)) {\n        var elementTextAlternative = computeElementTextAlternative(current);\n\n        if (elementTextAlternative !== null) {\n          consultedNodes.add(current);\n          return elementTextAlternative;\n        }\n      }\n    } // special casing, cheating to make tests pass\n    // https://github.com/w3c/accname/issues/67\n\n\n    if (hasAnyConcreteRoles(current, [\"menu\"])) {\n      consultedNodes.add(current);\n      return \"\";\n    } // 2E\n\n\n    if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n      if (hasAnyConcreteRoles(current, [\"combobox\", \"listbox\"])) {\n        consultedNodes.add(current);\n        var selectedOptions = querySelectedOptions(current);\n\n        if (selectedOptions.length === 0) {\n          // defined per test `name_heading_combobox`\n          return isHTMLInputElement(current) ? current.value : \"\";\n        }\n\n        return ArrayFrom(selectedOptions).map(function (selectedOption) {\n          return computeTextAlternative(selectedOption, {\n            isEmbeddedInLabel: context.isEmbeddedInLabel,\n            isReferenced: false,\n            recursion: true\n          });\n        }).join(\" \");\n      }\n\n      if (hasAbstractRole(current, \"range\")) {\n        consultedNodes.add(current);\n\n        if (current.hasAttribute(\"aria-valuetext\")) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n          return current.getAttribute(\"aria-valuetext\");\n        }\n\n        if (current.hasAttribute(\"aria-valuenow\")) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n          return current.getAttribute(\"aria-valuenow\");\n        } // Otherwise, use the value as specified by a host language attribute.\n\n\n        return current.getAttribute(\"value\") || \"\";\n      }\n\n      if (hasAnyConcreteRoles(current, [\"textbox\"])) {\n        consultedNodes.add(current);\n        return getValueOfTextbox(current);\n      }\n    } // 2F: https://w3c.github.io/accname/#step2F\n\n\n    if (allowsNameFromContent(current) || isElement(current) && context.isReferenced || isNativeHostLanguageTextAlternativeElement(current) || isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {\n      consultedNodes.add(current);\n      return computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n    }\n\n    if (current.nodeType === current.TEXT_NODE) {\n      consultedNodes.add(current);\n      return current.textContent || \"\";\n    }\n\n    if (context.recursion) {\n      consultedNodes.add(current);\n      return computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n    }\n\n    var tooltipAttributeValue = computeTooltipAttributeValue(current);\n\n    if (tooltipAttributeValue !== null) {\n      consultedNodes.add(current);\n      return tooltipAttributeValue;\n    } // TODO should this be reachable?\n\n\n    consultedNodes.add(current);\n    return \"\";\n  }\n\n  return asFlatString(computeTextAlternative(root, {\n    isEmbeddedInLabel: false,\n    // by spec computeAccessibleDescription starts with the referenced elements as roots\n    isReferenced: compute === \"description\",\n    recursion: false\n  }));\n}","map":{"version":3,"mappings":"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","names":["ArrayFrom","SetLike","hasAnyConcreteRoles","isElement","isHTMLTableCaptionElement","isHTMLInputElement","isHTMLSelectElement","isHTMLTextAreaElement","safeWindow","isHTMLFieldSetElement","isHTMLLegendElement","isHTMLOptGroupElement","isHTMLTableElement","isHTMLSlotElement","isSVGSVGElement","isSVGTitleElement","queryIdRefs","getLocalName","asFlatString","s","trim","replace","isHidden","node","getComputedStyleImplementation","hasAttribute","getAttribute","style","getPropertyValue","isControl","hasAbstractRole","role","TypeError","querySelectorAllSubtree","element","selectors","elements","querySelectorAll","forEach","root","push","apply","querySelectedOptions","listbox","selectedOptions","isMarkedPresentational","isNativeHostLanguageTextAlternativeElement","allowsNameFromContent","isDescendantOfNativeHostLanguageTextAlternativeElement","computeTooltipAttributeValue","getValueOfTextbox","value","textContent","getTextualContent","declaration","content","test","slice","isLabelableElement","localName","findLabelableElement","labelableElement","childNodes","childNode","descendantLabelableElement","getControlOfLabel","label","control","undefined","htmlFor","ownerDocument","getElementById","getLabels","labelsProperty","labels","document","filter","getSlotContents","slot","assignedNodes","length","computeTextAlternative","options","consultedNodes","window","compute","computedStyleSupportsPseudoElements","getComputedStyle","bind","hidden","computeMiscTextAlternative","context","accumulatedText","pseudoBefore","beforeContent","concat","child","result","isEmbeddedInLabel","isReferenced","recursion","display","separator","pseudoAfter","afterContent","computeElementTextAlternative","useAttribute","attributeName","attribute","getAttributeNode","has","add","children","i","nameFromAlt","nameFromLabel","type","nameFromValue","map","join","nameFromTitle","nameFromSubTree","current","labelElements","skipToStep2E","ariaLabel","elementTextAlternative","selectedOption","nodeType","TEXT_NODE","tooltipAttributeValue"],"sources":["/home/hari/Desktop/Projects/ITslots/frontend/node_modules/dom-accessibility-api/sources/accessible-name-and-description.ts"],"sourcesContent":["/**\n * implements https://w3c.github.io/accname/\n */\nimport ArrayFrom from \"./polyfills/array.from\";\nimport SetLike from \"./polyfills/SetLike\";\nimport {\n\thasAnyConcreteRoles,\n\tisElement,\n\tisHTMLTableCaptionElement,\n\tisHTMLInputElement,\n\tisHTMLSelectElement,\n\tisHTMLTextAreaElement,\n\tsafeWindow,\n\tisHTMLFieldSetElement,\n\tisHTMLLegendElement,\n\tisHTMLOptGroupElement,\n\tisHTMLTableElement,\n\tisHTMLSlotElement,\n\tisSVGSVGElement,\n\tisSVGTitleElement,\n\tqueryIdRefs,\n\tgetLocalName,\n} from \"./util\";\n\n/**\n *  A string of characters where all carriage returns, newlines, tabs, and form-feeds are replaced with a single space, and multiple spaces are reduced to a single space. The string contains only character data; it does not contain any markup.\n */\ntype FlatString = string & {\n\t__flat: true;\n};\n\n/**\n * interface for an options-bag where `window.getComputedStyle` can be mocked\n */\nexport interface ComputeTextAlternativeOptions {\n\tcompute?: \"description\" | \"name\";\n\t/**\n\t * Set to true if window.computedStyle supports the second argument.\n\t * This should be false in JSDOM. Otherwise JSDOM will log console errors.\n\t */\n\tcomputedStyleSupportsPseudoElements?: boolean;\n\t/**\n\t * mock window.getComputedStyle. Needs `content`, `display` and `visibility`\n\t */\n\tgetComputedStyle?: typeof window.getComputedStyle;\n\t/**\n\t * Set to `true` if you want to include hidden elements in the accessible name and description computation.\n\t * Skips 2A in https://w3c.github.io/accname/#computation-steps.\n\t * @default false\n\t */\n\thidden?: boolean;\n}\n\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\nfunction asFlatString(s: string): FlatString {\n\treturn s.trim().replace(/\\s\\s+/g, \" \") as FlatString;\n}\n\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\nfunction isHidden(\n\tnode: Node,\n\tgetComputedStyleImplementation: typeof window.getComputedStyle\n): node is Element {\n\tif (!isElement(node)) {\n\t\treturn false;\n\t}\n\n\tif (\n\t\tnode.hasAttribute(\"hidden\") ||\n\t\tnode.getAttribute(\"aria-hidden\") === \"true\"\n\t) {\n\t\treturn true;\n\t}\n\n\tconst style = getComputedStyleImplementation(node);\n\treturn (\n\t\tstyle.getPropertyValue(\"display\") === \"none\" ||\n\t\tstyle.getPropertyValue(\"visibility\") === \"hidden\"\n\t);\n}\n\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\nfunction isControl(node: Node): boolean {\n\treturn (\n\t\thasAnyConcreteRoles(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) ||\n\t\thasAbstractRole(node, \"range\")\n\t);\n}\n\nfunction hasAbstractRole(node: Node, role: string): node is Element {\n\tif (!isElement(node)) {\n\t\treturn false;\n\t}\n\n\tswitch (role) {\n\t\tcase \"range\":\n\t\t\treturn hasAnyConcreteRoles(node, [\n\t\t\t\t\"meter\",\n\t\t\t\t\"progressbar\",\n\t\t\t\t\"scrollbar\",\n\t\t\t\t\"slider\",\n\t\t\t\t\"spinbutton\",\n\t\t\t]);\n\t\tdefault:\n\t\t\tthrow new TypeError(\n\t\t\t\t`No knowledge about abstract role '${role}'. This is likely a bug :(`\n\t\t\t);\n\t}\n}\n\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\nfunction querySelectorAllSubtree(\n\telement: Element,\n\tselectors: string\n): Element[] {\n\tconst elements = ArrayFrom(element.querySelectorAll(selectors));\n\n\tqueryIdRefs(element, \"aria-owns\").forEach((root) => {\n\t\t// babel transpiles this assuming an iterator\n\t\telements.push.apply(elements, ArrayFrom(root.querySelectorAll(selectors)));\n\t});\n\n\treturn elements;\n}\n\nfunction querySelectedOptions(listbox: Element): ArrayLike<Element> {\n\tif (isHTMLSelectElement(listbox)) {\n\t\t// IE11 polyfill\n\t\treturn (\n\t\t\tlistbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\")\n\t\t);\n\t}\n\treturn querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\n\nfunction isMarkedPresentational(node: Node): node is Element {\n\treturn hasAnyConcreteRoles(node, [\"none\", \"presentation\"]);\n}\n\n/**\n * Elements specifically listed in html-aam\n *\n * We don't need this for `label` or `legend` elements.\n * Their implicit roles already allow \"naming from content\".\n *\n * sources:\n *\n * - https://w3c.github.io/html-aam/#table-element\n */\nfunction isNativeHostLanguageTextAlternativeElement(\n\tnode: Node\n): node is Element {\n\treturn isHTMLTableCaptionElement(node);\n}\n\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\nfunction allowsNameFromContent(node: Node): boolean {\n\treturn hasAnyConcreteRoles(node, [\n\t\t\"button\",\n\t\t\"cell\",\n\t\t\"checkbox\",\n\t\t\"columnheader\",\n\t\t\"gridcell\",\n\t\t\"heading\",\n\t\t\"label\",\n\t\t\"legend\",\n\t\t\"link\",\n\t\t\"menuitem\",\n\t\t\"menuitemcheckbox\",\n\t\t\"menuitemradio\",\n\t\t\"option\",\n\t\t\"radio\",\n\t\t\"row\",\n\t\t\"rowheader\",\n\t\t\"switch\",\n\t\t\"tab\",\n\t\t\"tooltip\",\n\t\t\"treeitem\",\n\t]);\n}\n\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/100\n */\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\n\tnode: Node\n): boolean {\n\treturn false;\n}\n\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/101\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\nfunction computeTooltipAttributeValue(node: Node): string | null {\n\treturn null;\n}\n\nfunction getValueOfTextbox(element: Element): string {\n\tif (isHTMLInputElement(element) || isHTMLTextAreaElement(element)) {\n\t\treturn element.value;\n\t}\n\t// https://github.com/eps1lon/dom-accessibility-api/issues/4\n\treturn element.textContent || \"\";\n}\n\nfunction getTextualContent(declaration: CSSStyleDeclaration): string {\n\tconst content = declaration.getPropertyValue(\"content\");\n\tif (/^[\"'].*[\"']$/.test(content)) {\n\t\treturn content.slice(1, -1);\n\t}\n\treturn \"\";\n}\n\n/**\n * https://html.spec.whatwg.org/multipage/forms.html#category-label\n * TODO: form-associated custom elements\n * @param element\n */\nfunction isLabelableElement(element: Element): boolean {\n\tconst localName = getLocalName(element);\n\n\treturn (\n\t\tlocalName === \"button\" ||\n\t\t(localName === \"input\" && element.getAttribute(\"type\") !== \"hidden\") ||\n\t\tlocalName === \"meter\" ||\n\t\tlocalName === \"output\" ||\n\t\tlocalName === \"progress\" ||\n\t\tlocalName === \"select\" ||\n\t\tlocalName === \"textarea\"\n\t);\n}\n\n/**\n * > [...], then the first such descendant in tree order is the label element's labeled control.\n * -- https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param element\n */\nfunction findLabelableElement(element: Element): Element | null {\n\tif (isLabelableElement(element)) {\n\t\treturn element;\n\t}\n\tlet labelableElement: Element | null = null;\n\telement.childNodes.forEach((childNode) => {\n\t\tif (labelableElement === null && isElement(childNode)) {\n\t\t\tconst descendantLabelableElement = findLabelableElement(childNode);\n\t\t\tif (descendantLabelableElement !== null) {\n\t\t\t\tlabelableElement = descendantLabelableElement;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn labelableElement;\n}\n\n/**\n * Polyfill of HTMLLabelElement.control\n * https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param label\n */\nfunction getControlOfLabel(label: HTMLLabelElement): Element | null {\n\tif (label.control !== undefined) {\n\t\treturn label.control;\n\t}\n\n\tconst htmlFor = label.getAttribute(\"for\");\n\tif (htmlFor !== null) {\n\t\treturn label.ownerDocument.getElementById(htmlFor);\n\t}\n\n\treturn findLabelableElement(label);\n}\n\n/**\n * Polyfill of HTMLInputElement.labels\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels\n * @param element\n */\nfunction getLabels(element: Element): HTMLLabelElement[] | null {\n\tconst labelsProperty = (element as any).labels as\n\t\t| undefined\n\t\t| null\n\t\t| NodeListOf<HTMLLabelElement>;\n\tif (labelsProperty === null) {\n\t\treturn labelsProperty;\n\t}\n\tif (labelsProperty !== undefined) {\n\t\treturn ArrayFrom(labelsProperty);\n\t}\n\n\t// polyfill\n\tif (!isLabelableElement(element)) {\n\t\treturn null;\n\t}\n\tconst document = element.ownerDocument;\n\n\treturn ArrayFrom(document.querySelectorAll(\"label\")).filter((label) => {\n\t\treturn getControlOfLabel(label) === element;\n\t});\n}\n\n/**\n * Gets the contents of a slot used for computing the accname\n * @param slot\n */\nfunction getSlotContents(slot: HTMLSlotElement): Node[] {\n\t// Computing the accessible name for elements containing slots is not\n\t// currently defined in the spec. This implementation reflects the\n\t// behavior of NVDA 2020.2/Firefox 81 and iOS VoiceOver/Safari 13.6.\n\tconst assignedNodes = slot.assignedNodes();\n\tif (assignedNodes.length === 0) {\n\t\t// if no nodes are assigned to the slot, it displays the default content\n\t\treturn ArrayFrom(slot.childNodes);\n\t}\n\treturn assignedNodes;\n}\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param options\n * @returns\n */\nexport function computeTextAlternative(\n\troot: Element,\n\toptions: ComputeTextAlternativeOptions = {}\n): string {\n\tconst consultedNodes = new SetLike<Node>();\n\n\tconst window = safeWindow(root);\n\tconst {\n\t\tcompute = \"name\",\n\t\tcomputedStyleSupportsPseudoElements = options.getComputedStyle !==\n\t\t\tundefined,\n\t\t// This might be overengineered. I don't know what happens if I call\n\t\t// window.getComputedStyle(elementFromAnotherWindow) or if I don't bind it\n\t\t// the type declarations don't require a `this`\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tgetComputedStyle = window.getComputedStyle.bind(window),\n\t\thidden = false,\n\t} = options;\n\n\t// 2F.i\n\tfunction computeMiscTextAlternative(\n\t\tnode: Node,\n\t\tcontext: { isEmbeddedInLabel: boolean; isReferenced: boolean }\n\t): string {\n\t\tlet accumulatedText = \"\";\n\t\tif (isElement(node) && computedStyleSupportsPseudoElements) {\n\t\t\tconst pseudoBefore = getComputedStyle(node, \"::before\");\n\t\t\tconst beforeContent = getTextualContent(pseudoBefore);\n\t\t\taccumulatedText = `${beforeContent} ${accumulatedText}`;\n\t\t}\n\n\t\t// FIXME: Including aria-owns is not defined in the spec\n\t\t// But it is required in the web-platform-test\n\t\tconst childNodes = isHTMLSlotElement(node)\n\t\t\t? getSlotContents(node)\n\t\t\t: ArrayFrom(node.childNodes).concat(queryIdRefs(node, \"aria-owns\"));\n\t\tchildNodes.forEach((child) => {\n\t\t\tconst result = computeTextAlternative(child, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t\trecursion: true,\n\t\t\t});\n\t\t\t// TODO: Unclear why display affects delimiter\n\t\t\t// see https://github.com/w3c/accname/issues/3\n\t\t\tconst display = isElement(child)\n\t\t\t\t? getComputedStyle(child).getPropertyValue(\"display\")\n\t\t\t\t: \"inline\";\n\t\t\tconst separator = display !== \"inline\" ? \" \" : \"\";\n\t\t\t// trailing separator for wpt tests\n\t\t\taccumulatedText += `${separator}${result}${separator}`;\n\t\t});\n\n\t\tif (isElement(node) && computedStyleSupportsPseudoElements) {\n\t\t\tconst pseudoAfter = getComputedStyle(node, \"::after\");\n\t\t\tconst afterContent = getTextualContent(pseudoAfter);\n\t\t\taccumulatedText = `${accumulatedText} ${afterContent}`;\n\t\t}\n\n\t\treturn accumulatedText.trim();\n\t}\n\n\tfunction computeElementTextAlternative(node: Node): string | null {\n\t\tif (!isElement(node)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param element\n\t\t * @param attributeName\n\t\t * @returns A string non-empty string or `null`\n\t\t */\n\t\tfunction useAttribute(\n\t\t\telement: Element,\n\t\t\tattributeName: string\n\t\t): string | null {\n\t\t\tconst attribute = element.getAttributeNode(attributeName);\n\t\t\tif (\n\t\t\t\tattribute !== null &&\n\t\t\t\t!consultedNodes.has(attribute) &&\n\t\t\t\tattribute.value.trim() !== \"\"\n\t\t\t) {\n\t\t\t\tconsultedNodes.add(attribute);\n\t\t\t\treturn attribute.value;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t// https://w3c.github.io/html-aam/#fieldset-and-legend-elements\n\t\tif (isHTMLFieldSetElement(node)) {\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isHTMLLegendElement(child)) {\n\t\t\t\t\treturn computeTextAlternative(child, {\n\t\t\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isHTMLTableElement(node)) {\n\t\t\t// https://w3c.github.io/html-aam/#table-element\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isHTMLTableCaptionElement(child)) {\n\t\t\t\t\treturn computeTextAlternative(child, {\n\t\t\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isSVGSVGElement(node)) {\n\t\t\t// https://www.w3.org/TR/svg-aam-1.0/\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isSVGTitleElement(child)) {\n\t\t\t\t\treturn child.textContent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t} else if (getLocalName(node) === \"img\" || getLocalName(node) === \"area\") {\n\t\t\t// https://w3c.github.io/html-aam/#area-element\n\t\t\t// https://w3c.github.io/html-aam/#img-element\n\t\t\tconst nameFromAlt = useAttribute(node, \"alt\");\n\t\t\tif (nameFromAlt !== null) {\n\t\t\t\treturn nameFromAlt;\n\t\t\t}\n\t\t} else if (isHTMLOptGroupElement(node)) {\n\t\t\tconst nameFromLabel = useAttribute(node, \"label\");\n\t\t\tif (nameFromLabel !== null) {\n\t\t\t\treturn nameFromLabel;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisHTMLInputElement(node) &&\n\t\t\t(node.type === \"button\" ||\n\t\t\t\tnode.type === \"submit\" ||\n\t\t\t\tnode.type === \"reset\")\n\t\t) {\n\t\t\t// https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n\t\t\tconst nameFromValue = useAttribute(node, \"value\");\n\t\t\tif (nameFromValue !== null) {\n\t\t\t\treturn nameFromValue;\n\t\t\t}\n\n\t\t\t// TODO: l10n\n\t\t\tif (node.type === \"submit\") {\n\t\t\t\treturn \"Submit\";\n\t\t\t}\n\t\t\t// TODO: l10n\n\t\t\tif (node.type === \"reset\") {\n\t\t\t\treturn \"Reset\";\n\t\t\t}\n\t\t}\n\n\t\tconst labels = getLabels(node);\n\t\tif (labels !== null && labels.length !== 0) {\n\t\t\tconsultedNodes.add(node);\n\t\t\treturn ArrayFrom(labels)\n\t\t\t\t.map((element) => {\n\t\t\t\t\treturn computeTextAlternative(element, {\n\t\t\t\t\t\tisEmbeddedInLabel: true,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: true,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.filter((label) => {\n\t\t\t\t\treturn label.length > 0;\n\t\t\t\t})\n\t\t\t\t.join(\" \");\n\t\t}\n\n\t\t// https://w3c.github.io/html-aam/#input-type-image-accessible-name-computation\n\t\t// TODO: wpt test consider label elements but html-aam does not mention them\n\t\t// We follow existing implementations over spec\n\t\tif (isHTMLInputElement(node) && node.type === \"image\") {\n\t\t\tconst nameFromAlt = useAttribute(node, \"alt\");\n\t\t\tif (nameFromAlt !== null) {\n\t\t\t\treturn nameFromAlt;\n\t\t\t}\n\n\t\t\tconst nameFromTitle = useAttribute(node, \"title\");\n\t\t\tif (nameFromTitle !== null) {\n\t\t\t\treturn nameFromTitle;\n\t\t\t}\n\n\t\t\t// TODO: l10n\n\t\t\treturn \"Submit Query\";\n\t\t}\n\n\t\tif (hasAnyConcreteRoles(node, [\"button\"])) {\n\t\t\t// https://www.w3.org/TR/html-aam-1.0/#button-element\n\t\t\tconst nameFromSubTree = computeMiscTextAlternative(node, {\n\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t\tif (nameFromSubTree !== \"\") {\n\t\t\t\treturn nameFromSubTree;\n\t\t\t}\n\t\t\treturn useAttribute(node, \"title\");\n\t\t}\n\n\t\treturn useAttribute(node, \"title\");\n\t}\n\n\tfunction computeTextAlternative(\n\t\tcurrent: Node,\n\t\tcontext: {\n\t\t\tisEmbeddedInLabel: boolean;\n\t\t\tisReferenced: boolean;\n\t\t\trecursion: boolean;\n\t\t}\n\t): string {\n\t\tif (consultedNodes.has(current)) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// 2A\n\t\tif (\n\t\t\t!hidden &&\n\t\t\tisHidden(current, getComputedStyle) &&\n\t\t\t!context.isReferenced\n\t\t) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn \"\" as FlatString;\n\t\t}\n\n\t\t// 2B\n\t\tconst labelElements = queryIdRefs(current, \"aria-labelledby\");\n\t\tif (\n\t\t\tcompute === \"name\" &&\n\t\t\t!context.isReferenced &&\n\t\t\tlabelElements.length > 0\n\t\t) {\n\t\t\treturn labelElements\n\t\t\t\t.map((element) =>\n\t\t\t\t\tcomputeTextAlternative(element, {\n\t\t\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\t\t\tisReferenced: true,\n\t\t\t\t\t\t// thais isn't recursion as specified, otherwise we would skip\n\t\t\t\t\t\t// `aria-label` in\n\t\t\t\t\t\t// <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.join(\" \");\n\t\t}\n\n\t\t// 2C\n\t\t// Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n\t\t// spec says we should only consider skipping if we have a non-empty label\n\t\tconst skipToStep2E =\n\t\t\tcontext.recursion && isControl(current) && compute === \"name\";\n\t\tif (!skipToStep2E) {\n\t\t\tconst ariaLabel = (\n\t\t\t\t(isElement(current) && current.getAttribute(\"aria-label\")) ||\n\t\t\t\t\"\"\n\t\t\t).trim();\n\t\t\tif (ariaLabel !== \"\" && compute === \"name\") {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\treturn ariaLabel;\n\t\t\t}\n\n\t\t\t// 2D\n\t\t\tif (!isMarkedPresentational(current)) {\n\t\t\t\tconst elementTextAlternative = computeElementTextAlternative(current);\n\t\t\t\tif (elementTextAlternative !== null) {\n\t\t\t\t\tconsultedNodes.add(current);\n\t\t\t\t\treturn elementTextAlternative;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// special casing, cheating to make tests pass\n\t\t// https://github.com/w3c/accname/issues/67\n\t\tif (hasAnyConcreteRoles(current, [\"menu\"])) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// 2E\n\t\tif (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n\t\t\tif (hasAnyConcreteRoles(current, [\"combobox\", \"listbox\"])) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\tconst selectedOptions = querySelectedOptions(current);\n\t\t\t\tif (selectedOptions.length === 0) {\n\t\t\t\t\t// defined per test `name_heading_combobox`\n\t\t\t\t\treturn isHTMLInputElement(current) ? current.value : \"\";\n\t\t\t\t}\n\t\t\t\treturn ArrayFrom(selectedOptions)\n\t\t\t\t\t.map((selectedOption) => {\n\t\t\t\t\t\treturn computeTextAlternative(selectedOption, {\n\t\t\t\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\t\trecursion: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.join(\" \");\n\t\t\t}\n\t\t\tif (hasAbstractRole(current, \"range\")) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\tif (current.hasAttribute(\"aria-valuetext\")) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n\t\t\t\t\treturn current.getAttribute(\"aria-valuetext\")!;\n\t\t\t\t}\n\t\t\t\tif (current.hasAttribute(\"aria-valuenow\")) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n\t\t\t\t\treturn current.getAttribute(\"aria-valuenow\")!;\n\t\t\t\t}\n\t\t\t\t// Otherwise, use the value as specified by a host language attribute.\n\t\t\t\treturn current.getAttribute(\"value\") || \"\";\n\t\t\t}\n\t\t\tif (hasAnyConcreteRoles(current, [\"textbox\"])) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\treturn getValueOfTextbox(current);\n\t\t\t}\n\t\t}\n\n\t\t// 2F: https://w3c.github.io/accname/#step2F\n\t\tif (\n\t\t\tallowsNameFromContent(current) ||\n\t\t\t(isElement(current) && context.isReferenced) ||\n\t\t\tisNativeHostLanguageTextAlternativeElement(current) ||\n\t\t\tisDescendantOfNativeHostLanguageTextAlternativeElement(current)\n\t\t) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn computeMiscTextAlternative(current, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t}\n\n\t\tif (current.nodeType === current.TEXT_NODE) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn current.textContent || \"\";\n\t\t}\n\n\t\tif (context.recursion) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn computeMiscTextAlternative(current, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t}\n\n\t\tconst tooltipAttributeValue = computeTooltipAttributeValue(current);\n\t\tif (tooltipAttributeValue !== null) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn tooltipAttributeValue;\n\t\t}\n\n\t\t// TODO should this be reachable?\n\t\tconsultedNodes.add(current);\n\t\treturn \"\";\n\t}\n\n\treturn asFlatString(\n\t\tcomputeTextAlternative(root, {\n\t\t\tisEmbeddedInLabel: false,\n\t\t\t// by spec computeAccessibleDescription starts with the referenced elements as roots\n\t\t\tisReferenced: compute === \"description\",\n\t\t\trecursion: false,\n\t\t})\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}