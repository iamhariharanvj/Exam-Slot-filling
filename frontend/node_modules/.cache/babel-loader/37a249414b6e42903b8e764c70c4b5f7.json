{"ast":null,"code":"export { getLocalName } from \"./getRole.mjs\";\nimport getRole, { getLocalName } from \"./getRole.mjs\";\nexport function isElement(node) {\n  return node !== null && node.nodeType === node.ELEMENT_NODE;\n}\nexport function isHTMLTableCaptionElement(node) {\n  return isElement(node) && getLocalName(node) === \"caption\";\n}\nexport function isHTMLInputElement(node) {\n  return isElement(node) && getLocalName(node) === \"input\";\n}\nexport function isHTMLOptGroupElement(node) {\n  return isElement(node) && getLocalName(node) === \"optgroup\";\n}\nexport function isHTMLSelectElement(node) {\n  return isElement(node) && getLocalName(node) === \"select\";\n}\nexport function isHTMLTableElement(node) {\n  return isElement(node) && getLocalName(node) === \"table\";\n}\nexport function isHTMLTextAreaElement(node) {\n  return isElement(node) && getLocalName(node) === \"textarea\";\n}\nexport function safeWindow(node) {\n  var _ref = node.ownerDocument === null ? node : node.ownerDocument,\n      defaultView = _ref.defaultView;\n\n  if (defaultView === null) {\n    throw new TypeError(\"no window available\");\n  }\n\n  return defaultView;\n}\nexport function isHTMLFieldSetElement(node) {\n  return isElement(node) && getLocalName(node) === \"fieldset\";\n}\nexport function isHTMLLegendElement(node) {\n  return isElement(node) && getLocalName(node) === \"legend\";\n}\nexport function isHTMLSlotElement(node) {\n  return isElement(node) && getLocalName(node) === \"slot\";\n}\nexport function isSVGElement(node) {\n  return isElement(node) && node.ownerSVGElement !== undefined;\n}\nexport function isSVGSVGElement(node) {\n  return isElement(node) && getLocalName(node) === \"svg\";\n}\nexport function isSVGTitleElement(node) {\n  return isSVGElement(node) && getLocalName(node) === \"title\";\n}\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\n\nexport function queryIdRefs(node, attributeName) {\n  if (isElement(node) && node.hasAttribute(attributeName)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n    var ids = node.getAttribute(attributeName).split(\" \");\n    return ids.map(function (id) {\n      return node.ownerDocument.getElementById(id);\n    }).filter(function (element) {\n      return element !== null;\n    } // TODO: why does this not narrow?\n    );\n  }\n\n  return [];\n}\nexport function hasAnyConcreteRoles(node, roles) {\n  if (isElement(node)) {\n    return roles.indexOf(getRole(node)) !== -1;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["getLocalName","getRole","isElement","node","nodeType","ELEMENT_NODE","isHTMLTableCaptionElement","isHTMLInputElement","isHTMLOptGroupElement","isHTMLSelectElement","isHTMLTableElement","isHTMLTextAreaElement","safeWindow","ownerDocument","defaultView","TypeError","isHTMLFieldSetElement","isHTMLLegendElement","isHTMLSlotElement","isSVGElement","ownerSVGElement","undefined","isSVGSVGElement","isSVGTitleElement","queryIdRefs","attributeName","hasAttribute","ids","getAttribute","split","map","id","getElementById","filter","element","hasAnyConcreteRoles","roles","indexOf"],"sources":["/home/hari/Desktop/Projects/ITslots/frontend/node_modules/dom-accessibility-api/sources/util.ts"],"sourcesContent":["export { getLocalName } from \"./getRole\";\nimport getRole, { getLocalName } from \"./getRole\";\n\nexport function isElement(node: Node | null): node is Element {\n\treturn node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nexport function isHTMLTableCaptionElement(\n\tnode: Node | null\n): node is HTMLTableCaptionElement {\n\treturn isElement(node) && getLocalName(node) === \"caption\";\n}\n\nexport function isHTMLInputElement(\n\tnode: Node | null\n): node is HTMLInputElement {\n\treturn isElement(node) && getLocalName(node) === \"input\";\n}\n\nexport function isHTMLOptGroupElement(\n\tnode: Node | null\n): node is HTMLOptGroupElement {\n\treturn isElement(node) && getLocalName(node) === \"optgroup\";\n}\n\nexport function isHTMLSelectElement(\n\tnode: Node | null\n): node is HTMLSelectElement {\n\treturn isElement(node) && getLocalName(node) === \"select\";\n}\n\nexport function isHTMLTableElement(\n\tnode: Node | null\n): node is HTMLTableElement {\n\treturn isElement(node) && getLocalName(node) === \"table\";\n}\n\nexport function isHTMLTextAreaElement(\n\tnode: Node | null\n): node is HTMLTextAreaElement {\n\treturn isElement(node) && getLocalName(node) === \"textarea\";\n}\n\nexport function safeWindow(node: Node): Window {\n\tconst { defaultView } =\n\t\tnode.ownerDocument === null ? (node as Document) : node.ownerDocument;\n\n\tif (defaultView === null) {\n\t\tthrow new TypeError(\"no window available\");\n\t}\n\treturn defaultView;\n}\n\nexport function isHTMLFieldSetElement(\n\tnode: Node | null\n): node is HTMLFieldSetElement {\n\treturn isElement(node) && getLocalName(node) === \"fieldset\";\n}\n\nexport function isHTMLLegendElement(\n\tnode: Node | null\n): node is HTMLLegendElement {\n\treturn isElement(node) && getLocalName(node) === \"legend\";\n}\n\nexport function isHTMLSlotElement(node: Node | null): node is HTMLSlotElement {\n\treturn isElement(node) && getLocalName(node) === \"slot\";\n}\n\nexport function isSVGElement(node: Node | null): node is SVGElement {\n\treturn isElement(node) && (node as SVGElement).ownerSVGElement !== undefined;\n}\n\nexport function isSVGSVGElement(node: Node | null): node is SVGSVGElement {\n\treturn isElement(node) && getLocalName(node) === \"svg\";\n}\n\nexport function isSVGTitleElement(node: Node | null): node is SVGTitleElement {\n\treturn isSVGElement(node) && getLocalName(node) === \"title\";\n}\n\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nexport function queryIdRefs(node: Node, attributeName: string): Element[] {\n\tif (isElement(node) && node.hasAttribute(attributeName)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n\t\tconst ids = node.getAttribute(attributeName)!.split(\" \");\n\n\t\treturn ids\n\t\t\t.map((id) => node.ownerDocument.getElementById(id))\n\t\t\t.filter(\n\t\t\t\t(element: Element | null): element is Element => element !== null\n\t\t\t\t// TODO: why does this not narrow?\n\t\t\t) as Element[];\n\t}\n\n\treturn [];\n}\n\nexport function hasAnyConcreteRoles(\n\tnode: Node,\n\troles: Array<string | null>\n): node is Element {\n\tif (isElement(node)) {\n\t\treturn roles.indexOf(getRole(node)) !== -1;\n\t}\n\treturn false;\n}\n"]},"metadata":{},"sourceType":"module"}