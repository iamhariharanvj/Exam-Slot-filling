{"ast":null,"code":"'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = function () {\n  let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return code => `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = function () {\n  let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n};\n\nfunction assembleStyles() {\n  const codes = new Map();\n  const styles = {\n    modifier: {\n      reset: [0, 0],\n      // 21 isn't widely supported and 22 does the same thing\n      bold: [1, 22],\n      dim: [2, 22],\n      italic: [3, 23],\n      underline: [4, 24],\n      overline: [53, 55],\n      inverse: [7, 27],\n      hidden: [8, 28],\n      strikethrough: [9, 29]\n    },\n    color: {\n      black: [30, 39],\n      red: [31, 39],\n      green: [32, 39],\n      yellow: [33, 39],\n      blue: [34, 39],\n      magenta: [35, 39],\n      cyan: [36, 39],\n      white: [37, 39],\n      // Bright color\n      blackBright: [90, 39],\n      redBright: [91, 39],\n      greenBright: [92, 39],\n      yellowBright: [93, 39],\n      blueBright: [94, 39],\n      magentaBright: [95, 39],\n      cyanBright: [96, 39],\n      whiteBright: [97, 39]\n    },\n    bgColor: {\n      bgBlack: [40, 49],\n      bgRed: [41, 49],\n      bgGreen: [42, 49],\n      bgYellow: [43, 49],\n      bgBlue: [44, 49],\n      bgMagenta: [45, 49],\n      bgCyan: [46, 49],\n      bgWhite: [47, 49],\n      // Bright color\n      bgBlackBright: [100, 49],\n      bgRedBright: [101, 49],\n      bgGreenBright: [102, 49],\n      bgYellowBright: [103, 49],\n      bgBlueBright: [104, 49],\n      bgMagentaBright: [105, 49],\n      bgCyanBright: [106, 49],\n      bgWhiteBright: [107, 49]\n    }\n  }; // Alias bright black as gray (and grey)\n\n  styles.color.gray = styles.color.blackBright;\n  styles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n  styles.color.grey = styles.color.blackBright;\n  styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n  for (const [groupName, group] of Object.entries(styles)) {\n    for (const [styleName, style] of Object.entries(group)) {\n      styles[styleName] = {\n        open: `\\u001B[${style[0]}m`,\n        close: `\\u001B[${style[1]}m`\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n  }\n\n  Object.defineProperty(styles, 'codes', {\n    value: codes,\n    enumerable: false\n  });\n  styles.color.close = '\\u001B[39m';\n  styles.bgColor.close = '\\u001B[49m';\n  styles.color.ansi256 = wrapAnsi256();\n  styles.color.ansi16m = wrapAnsi16m();\n  styles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n  styles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET); // From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\n  Object.defineProperties(styles, {\n    rgbToAnsi256: {\n      value: (red, green, blue) => {\n        // We use the extended greyscale palette here, with the exception of\n        // black and white. normal palette only has 4 greyscale shades.\n        if (red === green && green === blue) {\n          if (red < 8) {\n            return 16;\n          }\n\n          if (red > 248) {\n            return 231;\n          }\n\n          return Math.round((red - 8) / 247 * 24) + 232;\n        }\n\n        return 16 + 36 * Math.round(red / 255 * 5) + 6 * Math.round(green / 255 * 5) + Math.round(blue / 255 * 5);\n      },\n      enumerable: false\n    },\n    hexToRgb: {\n      value: hex => {\n        const matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\n        if (!matches) {\n          return [0, 0, 0];\n        }\n\n        let {\n          colorString\n        } = matches.groups;\n\n        if (colorString.length === 3) {\n          colorString = colorString.split('').map(character => character + character).join('');\n        }\n\n        const integer = Number.parseInt(colorString, 16);\n        return [integer >> 16 & 0xFF, integer >> 8 & 0xFF, integer & 0xFF];\n      },\n      enumerable: false\n    },\n    hexToAnsi256: {\n      value: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n      enumerable: false\n    }\n  });\n  return styles;\n} // Make the export immutable\n\n\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: assembleStyles\n});","map":{"version":3,"sources":["/home/hari/Desktop/Projects/ITslots/frontend/node_modules/pretty-format/node_modules/ansi-styles/index.js"],"names":["ANSI_BACKGROUND_OFFSET","wrapAnsi256","offset","code","wrapAnsi16m","red","green","blue","assembleStyles","codes","Map","styles","modifier","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","color","black","yellow","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","gray","bgGray","grey","bgGrey","groupName","group","Object","entries","styleName","style","open","close","set","defineProperty","value","enumerable","ansi256","ansi16m","defineProperties","rgbToAnsi256","Math","round","hexToRgb","hex","matches","exec","toString","colorString","groups","length","split","map","character","join","integer","Number","parseInt","hexToAnsi256","module","get"],"mappings":"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","sourcesContent":["'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n"]},"metadata":{},"sourceType":"script"}